dt.wi<-dt.wi[,1:32]
table(dt.wi)
table(dt.wi[,1:5])
table(dt.wi[2])
cancer.p<-table(dt.wi[2])
cancer.p<-table(dt.wi[2])
cancer.p
cancer.p<-table(dt.wi[2])
cancer.p[1]
cancer.p<-table(dt.wi[2])
cancer.p[[1]]
cancer.p<-table(dt.wi[2])
cancer.p
cancer.p[[1]]
cancer.p<-table(dt.wi[2])
cancer.p
cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])
percent.malignant
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])), digits = 3
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])), digits = 3)
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3)
percent.malignant
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3), "%")
percent.malignant
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3), "%")
percent.malignant
cancer.p<-table(dt.wi[2])
cancer.p
precent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3), "%")
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3), "%")
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]]),digits = 3), "%")
percent.malignant
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])*100,digits = 3), "%")
percent.malignant
CanReg = lm(diagnosis ~ ., data=dt.wi)
dt.wi$diagnosis<-as.factor(dt.wi)
dt.wi$diagnosis<-as.factor(dt.wi$diagnosis)
# Multiple Variable Regression
CanReg = lm(diagnosis ~ ., data=dt.wi)
summary(CanReg)
convernsion_func<- function(x,y) if (x=='B'){y<-0}else{y<-1}
dt.wi$malig<-mapply(convernsion_func,dt.wi$diagnosis,dt.wi$malig)
replace(dt.wi,'M',1)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
replace(dt.wi,'M',1)
head(dt.wi)
replace(dt.wi$diagnosis,'M',1)
(test <- c(rep(1,3),rep(2,2),rep(3,1)))
replace<-c(1,0)
for(i in dt.wi$diagnosis)
{replace(dt.wi$diagnosis,dt.wi$diagnosis==i,replace[i])}
dt.wi(head)
replace<-c(1,0)
for(i in dt.wi$diagnosis)
{dt.wi$diagnosis<-replace(dt.wi$diagnosis,dt.wi$diagnosis==i,replace[i])}
dt.wi(head)
head(dt.wi)
replace<-c('1','0')
for(i in dt.wi$diagnosis)
{dt.wi$diagnosis<-replace(dt.wi$diagnosis,dt.wi$diagnosis==i,replace[i])}
head(dt.wi)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
r<-c('1','0')
for(i in dt.wi$diagnosis)
{dt.wi$diagnosis<-replace(dt.wi$diagnosis,dt.wi$diagnosis==i,r[i])}
head(dt.wi)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
r<-c('1','0')
for(i in dt.wi$diagnosis)
{dt.wi$outcome<-replace(dt.wi$diagnosis,dt.wi$diagnosis==i,r[i])}
head(dt.wi)
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome[dt.wi$diagnosis == 'B']<-0
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
unique(dt.wi$X)
dt.wi<-dt.wi[,1:32]
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])*100,digits = 3), "%")
percent.malignant
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome[dt.wi$diagnosis == 'B']<-0
head(dt.wi)
unique(dt.wi$outcome)
split = sample.split(dt.wi$outcome, SplitRatio = 0.60)
Train = subset(dt.wi, split==TRUE)
Test = subset(dt.wi, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
summary(dt.wi.log)
split = sample.split(dt.wi$outcome, SplitRatio = 0.60)
Train = subset(dt.wi, split==TRUE)
Test = subset(dt.wi, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ dt.wi[,3:32], data = Train, family=binomial)
split = sample.split(dt.wi$outcome, SplitRatio = 0.60)
Train = subset(dt.wi, split==TRUE)
Test = subset(dt.wi, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ dt.wi[3:32,], data = Train, family=binomial)
set.seed(1234)
dt.no.na<-na.omit(dt)
plot(dt.no.na, type='l')
dt.sc <- scale(dt.no.na)
describe(dt.sc)
plot(dt.sc, type='l')
dt.pc = prcomp(dt.sc)
summary(dt.pc)
dt.pc$rotation
dt.pc$rotation
plot(dt.pc, type='l')
KmeansClustering <- kmeans(dt.sc, centers = 4)
fviz_cluster(KmeansClustering, data = dt.sc)
KmeansClustering <- kmeans(dt.sc, centers = 2)
fviz_cluster(KmeansClustering, data = dt.sc)
KmeansClustering <- kmeans(dt.sc, centers = 3)
fviz_cluster(KmeansClustering, data = dt.sc)
biplot(dt.pc)
abline(h = 0, v = 0, col = "gray60")
corrplot(cor(dt.sc[1:14]))
describe(dt.sc)
dt$agegrp<-as.integer(dt$agegrp)
dt$bmi<-as.integer(dt$bmi)
dt$race<-as.integer(dt$race)
dt$Hispanic<-as.integer(dt$Hispanic)
corrplot(cor(dt[1:14]))
set.seed(1234)
dt.no.na<-na.omit(dt)
dt.sc <- scale(dt.no.na)
describe(dt.sc)
dt.pc = prcomp(dt.sc)
summary(dt.pc)
corrplot(cor(dt.sc[1:14]))
set.seed(1234)
dt.no.na<-na.omit(dt)
dt.sc <- scale(dt.no.na)
describe(dt.sc)
dt.pc<-prcomp(dt.sc)
summary(dt.pc)
corrplot(cor(dt.sc[1:14]))
#Import
dt <- read.delim("risk.txt", header = FALSE, sep = " ", dec = ".")
#Remove extra cols
dt<- dt[c(1,3:16,22)]
#Rename cols
colnames(dt)<-c('menopaus','agegrp','density','race','Hispanic','bmi','agefirst','nrelbc','brstproc','lastmamm','surgmeno','hrt','invasive','cancer','training','count')
head(dt)
tail(dt)
describe(dt)
dt$agegrp<-as.factor(dt$agegrp)
dt$bmi<-as.factor(dt$bmi)
dt$race<-as.factor(dt$race)
dt$Hispanic<-as.factor(dt$Hispanic)
ages<-c('35-39','40-44','45-49','50-59','60-64','65-69','70-74','75-79','80-84')
bmival<-c('NA','10-24.99','25-29.99','30-34.99','35+','unknown')
race<-c('NA','white','asian','black','nat ame','mix','unk')
his<-c('no','yes','unk','unk','.','unk')
p1 <- ggplot(dt, aes(x=agegrp)) +
geom_bar(fill="powderblue") +
ggtitle("Age Groups") + theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(ages))
p2 <- ggplot(dt, aes(x=race)) +
geom_bar(fill="powderblue") +
ggtitle("Race")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(race))
p3 <- ggplot(dt, aes(x=Hispanic)) +
geom_bar(fill="powderblue") +
ggtitle("Hispanic")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(his))
p4 <- ggplot(dt, aes(x=bmi)) +
geom_bar(fill="powderblue") +
ggtitle("BMI")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(bmival))
multiplot(p1,p2,p3,p4,cols=2)
dt$agegrp<-as.integer(dt$agegrp)
dt$bmi<-as.integer(dt$bmi)
dt$race<-as.integer(dt$race)
dt$Hispanic<-as.integer(dt$Hispanic)
corrplot(cor(dt[1:14]))
corrplot(cor(dt.sc[1:14]))
set.seed(1234)
dt.no.na<-na.omit(dt)
dt.sc <- scale(dt.no.na)
describe(dt.sc)
dt.pc<-prcomp(dt.sc)
summary(dt.pc)
KmeansClustering <- kmeans(dt.sc, centers = 7)
fviz_cluster(KmeansClustering, data = dt.sc)
dt.wi.test<-subset(dt.wi[3:32])
split = sample.split(dt.wi.test$outcome, SplitRatio = 0.60)
dt.wi.test<-subset(dt.wi[3:32])
summary(dt.wi.test)
dt.wi.test<-subset(dt.wi[3:33])
summary(dt.wi.test)
dt.wi.test<-subset(dt.wi[3:33])
split = sample.split(dt.wi.test$outcome, SplitRatio = 0.60)
Train = subset(dt.wi.test, split==TRUE)
Test = subset(dt.wi.test, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ dt.wi.test, data = Train, family=binomial)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
unique(dt.wi$X)
dt.wi<-dt.wi[,1:32]
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])*100,digits = 3), "%")
percent.malignant
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome[dt.wi$diagnosis == 'B']<-0
unique(dt.wi$outcome)
summary(dt.wi$outcome)
table(dt.wi$outcome)
dt.wi.test<-subset(dt.wi[3:33])
summary(dt.wi.test)
KmeansClustering$cluster
KmeansClustering$size
split = sample.split(dt.wi.test$outcome, SplitRatio = 0.60)
Train = subset(dt.wi.test, split==TRUE)
Test = subset(dt.wi.test, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
dt.wi.test<-subset(dt.wi[3:33])
summary(dt.wi.test)
split = sample.split(dt.wi.test$outcome, SplitRatio = .5)
Train = subset(dt.wi.test, split==TRUE)
Test = subset(dt.wi.test, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
summary(dt.wi.log)
CancerTree = rpart(outcome ~ ., method="class", data=Train, minbucket=25)
prp(CancerTree)
CancerTree = rpart(outcome ~ ., method="class", data=Train, minbucket=1)
prp(CancerTree)
CancerTree = rpart(outcome ~ ., method="class", data=dt.wi.test, minbucket=1)
prp(CancerTree)
knitr::opts_chunk$set(echo = TRUE)
library(psych)#For summary stats
library(ggplot2)#For graphs
library(scales)#Clean up axis labels
library(corrplot)#Explore correlations
library(gplots)#For plotting means
library(caTools)
library(rpart)
library(rpart.plot)
library(factoextra)
library(cluster)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
knitr::opts_chunk$set(echo = TRUE)
library(psych)#For summary stats
library(ggplot2)#For graphs
library(scales)#Clean up axis labels
library(corrplot)#Explore correlations
library(gplots)#For plotting means
library(caTools)
library(rpart)
library(rpart.plot)
library(factoextra)
library(cluster)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
#Import
dt <- read.delim("risk.txt", header = FALSE, sep = " ", dec = ".")
#Remove extra cols
dt<- dt[c(1,3:16,22)]
#Rename cols
colnames(dt)<-c('menopaus','agegrp','density','race','Hispanic','bmi','agefirst','nrelbc','brstproc','lastmamm','surgmeno','hrt','invasive','cancer','training','count')
head(dt)
tail(dt)
describe(dt)
dt$agegrp<-as.factor(dt$agegrp)
dt$bmi<-as.factor(dt$bmi)
dt$race<-as.factor(dt$race)
dt$Hispanic<-as.factor(dt$Hispanic)
ages<-c('35-39','40-44','45-49','50-59','60-64','65-69','70-74','75-79','80-84')
bmival<-c('NA','10-24.99','25-29.99','30-34.99','35+','unknown')
race<-c('NA','white','asian','black','nat ame','mix','unk')
his<-c('no','yes','unk','unk','.','unk')
p1 <- ggplot(dt, aes(x=agegrp)) +
geom_bar(fill="powderblue") +
ggtitle("Age Groups") + theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(ages))
p2 <- ggplot(dt, aes(x=race)) +
geom_bar(fill="powderblue") +
ggtitle("Race")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(race))
p3 <- ggplot(dt, aes(x=Hispanic)) +
geom_bar(fill="powderblue") +
ggtitle("Hispanic")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(his))
p4 <- ggplot(dt, aes(x=bmi)) +
geom_bar(fill="powderblue") +
ggtitle("BMI")+ theme(axis.text.x = element_text(angle = 65, hjust = 1))+ scale_x_discrete(labels=c(bmival))
multiplot(p1,p2,p3,p4,cols=2)
dt$agegrp<-as.integer(dt$agegrp)
dt$bmi<-as.integer(dt$bmi)
dt$race<-as.integer(dt$race)
dt$Hispanic<-as.integer(dt$Hispanic)
corrplot(cor(dt[1:14]))
set.seed(1234)
dt.no.na<-na.omit(dt)
dt.sc <- scale(dt.no.na)
describe(dt.sc)
dt.pc<-prcomp(dt.sc)
summary(dt.pc)
dt.pc$rotation
plot(dt.pc, type='l')
KmeansClustering <- kmeans(dt.sc, centers = 7)
KmeansClustering$size
fviz_cluster(KmeansClustering, data = dt.sc)
biplot(dt.pc)
abline(h = 0, v = 0, col = "gray60")
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
unique(dt.wi$X)
dt.wi<-dt.wi[,1:32]
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])*100,digits = 3), "%")
percent.malignant
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome[dt.wi$diagnosis == 'B']<-0
unique(dt.wi$outcome)
summary(dt.wi$outcome)
table(dt.wi$outcome)
dt.wi.test<-subset(dt.wi[3:33])
summary(dt.wi.test)
split = sample.split(dt.wi.test$outcome, SplitRatio = .5)
Train = subset(dt.wi.test, split==TRUE)
Test = subset(dt.wi.test, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
summary(dt.wi.log)
CancerTree = rpart(outcome ~ ., method="class", data=dt.wi.test, minbucket=1)
prp(CancerTree)
dt.wi$diagnosis<-as.Factor(dt.wi$diagnosis)
dt.wi$diagnosis<-as.factor(dt.wi$diagnosis)
dt.wi$diagnosis<-as.factor(dt.wi$diagnosis)
split = sample.split(dt.wi$diagnosis, SplitRatio = .7)
Train = subset(dt.wi, split==TRUE)
Test = subset(dt.wi, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(diagnosis ~ ., data = Train, family=binomial)
summary(dt.wi.log)
dt.sc<-dt
dt.sc[,1:14] <- scale(dt.sc[,1:14])
corrplot(cor(dt.sc[1:14]))
cor(dt.sc[1:14])
split = sample.split(dt.no.na$invasive, SplitRatio = .7)
Train = subset(dt.no.na, split==TRUE)
Test = subset(dt.no.na, split==FALSE)
# Building a Logistic Regression Model
dt.wi.no.na.log = glm(invasive ~ ., data = Train, family=binomial)
summary(dt.wi.no.na.log)
split = sample.split(dt.no.na$invasive, SplitRatio = .7)
Train = subset(dt.no.na, split==TRUE)
Test = subset(dt.no.na, split==FALSE)
# Building a Logistic Regression Model
dt.wi.no.na.log = glm(invasive ~ agegrp + lastmamm + agefirst, data = Train, family=binomial)
summary(dt.wi.no.na.log)
split = sample.split(dt.no.na$invasive, SplitRatio = .7)
Train = subset(dt.no.na, split==TRUE)
Test = subset(dt.no.na, split==FALSE)
# Building a Logistic Regression Model
dt.wi.no.na.log = glm(invasive ~ agegrp + lastmamm + agefirst, data = Train, family=binomial)
summary(dt.wi.no.na.log)
#Import
dt.wi <- read.csv("data.csv")
head(dt.wi)
tail(dt.wi)
unique(dt.wi$X)
dt.wi<-dt.wi[,1:32]
cancer.p<-table(dt.wi[2])
cancer.p
percent.malignant<-paste(round(cancer.p[[2]]/(cancer.p[[1]]+cancer.p[[2]])*100,digits = 3), "%")
percent.malignant
dt.wi$diagnosis<-as.factor(dt.wi$diagnosis)
split = sample.split(dt.wi$diagnosis, SplitRatio = .7)
Train = subset(dt.wi, split==TRUE)
Test = subset(dt.wi, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(diagnosis ~ ., data = Train, family=binomial)
summary(dt.wi.log)
dt.wi$outcome[dt.wi$diagnosis == 'M']<-1
dt.wi$outcome[dt.wi$diagnosis == 'B']<-0
unique(dt.wi$outcome)
summary(dt.wi$outcome)
table(dt.wi$outcome)
dt.wi.test<-subset(dt.wi[3:33])
summary(dt.wi.test)
split = sample.split(dt.wi.test$outcome, SplitRatio = .5)
Train = subset(dt.wi.test, split==TRUE)
Test = subset(dt.wi.test, split==FALSE)
# Building a Logistic Regression Model
dt.wi.log = glm(outcome ~ ., data = Train, family=binomial)
summary(dt.wi.log)
CancerTree = rpart(outcome ~ ., method="class", data=dt.wi.test, minbucket=1)
prp(CancerTree)
biplot(dt.pc)
abline(h = 0, v = 0, col = "gray60")
dt$agegrp<-as.integer(dt$agegrp)
dt$bmi<-as.integer(dt$bmi)
dt$race<-as.integer(dt$race)
dt$Hispanic<-as.integer(dt$Hispanic)
corrplot(cor(dt[1:14]))
dt.sc<-dt
dt.sc[,1:14] <- scale(dt.sc[,1:14])
corrplot(cor(dt.sc[1:14]))
dt$agegrp<-as.integer(dt$agegrp)
dt$bmi<-as.integer(dt$bmi)
dt$race<-as.integer(dt$race)
dt$Hispanic<-as.integer(dt$Hispanic)
corrplot(cor(dt[1:14]))
set.seed(1234)
dt.no.na<-na.omit(dt)
dt.sc <- scale(dt.no.na)
describe(dt.sc)
dt.pc<-prcomp(dt.sc)
summary(dt.pc)
dt.pc$rotation
plot(dt.pc, type='l')
CancerTree = rpart(outcome ~ ., method="class", data=dt.wi.test, minbucket=1)
prp(CancerTree)
